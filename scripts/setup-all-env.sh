#!/bin/bash

# Script to set up ALL environment variables from various .env files
# Run this script with: source scripts/setup-all-env.sh

echo "🔧 Setting up ALL environment variables..."

# Function to export variables from a file
export_env_file() {
    local file=$1
    local file_name=$(basename $file)
    
    if [ -f "$file" ]; then
        echo "📂 Loading from $file_name..."
        
        # Read each line from the file
        while IFS= read -r line || [ -n "$line" ]; do
            # Skip comments and empty lines
            if [[ ! "$line" =~ ^# ]] && [[ -n "$line" ]] && [[ "$line" == *"="* ]]; then
                # Export the variable
                export "$line"
                # Get just the variable name for display
                var_name=$(echo "$line" | cut -d '=' -f1)
                echo "   ✅ $var_name"
            fi
        done < "$file"
    else
        echo "   ⚠️  $file not found"
    fi
}

# Load all environment files
echo ""
echo "Loading environment variables from all sources..."
echo "================================================"

# Load from .env.production (production database and services)
export_env_file ".env.production"

# Load from .env.notion (Notion integration)
export_env_file ".env.notion"

# Load from .env.local if it exists (local development overrides)
if [ -f ".env.local" ]; then
    export_env_file ".env.local"
fi

# Load from .env if it exists (general environment)
if [ -f ".env" ]; then
    export_env_file ".env"
fi

echo ""
echo "================================================"
echo "✅ All environment variables have been loaded!"
echo ""
echo "📝 Creating permanent setup script..."

# Create a file with all the exports for permanent setup
cat > ~/.mcp_env_vars.sh << 'EOF'
#!/bin/bash
# MCP and Project Environment Variables
# Auto-generated by setup-all-env.sh

EOF

# Append all environment variables to the permanent file
echo "# Production Database (Supabase)" >> ~/.mcp_env_vars.sh
grep "^DATABASE_URL=" .env.production >> ~/.mcp_env_vars.sh 2>/dev/null || true
echo "" >> ~/.mcp_env_vars.sh

echo "# Supabase Configuration" >> ~/.mcp_env_vars.sh
grep "^NEXT_PUBLIC_SUPABASE_URL=" .env.production >> ~/.mcp_env_vars.sh 2>/dev/null || true
grep "^NEXT_PUBLIC_SUPABASE_ANON_KEY=" .env.production >> ~/.mcp_env_vars.sh 2>/dev/null || true
grep "^SUPABASE_SERVICE_ROLE_KEY=" .env.production >> ~/.mcp_env_vars.sh 2>/dev/null || true
echo "" >> ~/.mcp_env_vars.sh

echo "# Clerk Authentication" >> ~/.mcp_env_vars.sh
grep "^NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=" .env.production >> ~/.mcp_env_vars.sh 2>/dev/null || true
grep "^CLERK_SECRET_KEY=" .env.production >> ~/.mcp_env_vars.sh 2>/dev/null || true
grep "^NEXT_PUBLIC_CLERK_SIGN_IN_URL=" .env.production >> ~/.mcp_env_vars.sh 2>/dev/null || true
grep "^NEXT_PUBLIC_CLERK_SIGN_UP_URL=" .env.production >> ~/.mcp_env_vars.sh 2>/dev/null || true
grep "^NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL=" .env.production >> ~/.mcp_env_vars.sh 2>/dev/null || true
grep "^NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL=" .env.production >> ~/.mcp_env_vars.sh 2>/dev/null || true
echo "" >> ~/.mcp_env_vars.sh

echo "# Stripe Configuration" >> ~/.mcp_env_vars.sh
grep "^STRIPE_SECRET_KEY=" .env.production >> ~/.mcp_env_vars.sh 2>/dev/null || true
grep "^STRIPE_WEBHOOK_SECRET=" .env.production >> ~/.mcp_env_vars.sh 2>/dev/null || true
grep "^NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=" .env.production >> ~/.mcp_env_vars.sh 2>/dev/null || true
grep "^STRIPE_CONNECT_CLIENT_ID=" .env.production >> ~/.mcp_env_vars.sh 2>/dev/null || true
echo "" >> ~/.mcp_env_vars.sh

echo "# Platform Configuration" >> ~/.mcp_env_vars.sh
grep "^ACTIVE_PAYMENT_PROVIDER=" .env.production >> ~/.mcp_env_vars.sh 2>/dev/null || true
grep "^NEXT_PUBLIC_PLATFORM_FEE_PERCENT=" .env.production >> ~/.mcp_env_vars.sh 2>/dev/null || true
grep "^NEXT_PUBLIC_APP_URL=" .env.production >> ~/.mcp_env_vars.sh 2>/dev/null || true
echo "" >> ~/.mcp_env_vars.sh

echo "# Notion Integration" >> ~/.mcp_env_vars.sh
grep "^NOTION_" .env.notion >> ~/.mcp_env_vars.sh 2>/dev/null || true
echo "" >> ~/.mcp_env_vars.sh

# If .env.local exists, add those too
if [ -f ".env.local" ]; then
    echo "# Local Overrides" >> ~/.mcp_env_vars.sh
    cat .env.local | grep -v "^#" | grep "=" >> ~/.mcp_env_vars.sh 2>/dev/null || true
    echo "" >> ~/.mcp_env_vars.sh
fi

# Convert to export statements
sed -i.bak 's/^/export /' ~/.mcp_env_vars.sh
sed -i.bak '/^export #/s/export //' ~/.mcp_env_vars.sh
sed -i.bak '/^export $/d' ~/.mcp_env_vars.sh
rm ~/.mcp_env_vars.sh.bak

echo "✅ Created ~/.mcp_env_vars.sh with all environment variables"
echo ""
echo "📝 Adding to shell profile..."

# Check if the source line already exists in .zshrc
if ! grep -q "source ~/.mcp_env_vars.sh" ~/.zshrc 2>/dev/null; then
    echo "" >> ~/.zshrc
    echo "# Load MCP and project environment variables" >> ~/.zshrc
    echo "[ -f ~/.mcp_env_vars.sh ] && source ~/.mcp_env_vars.sh" >> ~/.zshrc
    echo "✅ Added to ~/.zshrc"
else
    echo "✅ Already in ~/.zshrc"
fi

# Also add to .bashrc if it exists
if [ -f ~/.bashrc ]; then
    if ! grep -q "source ~/.mcp_env_vars.sh" ~/.bashrc 2>/dev/null; then
        echo "" >> ~/.bashrc
        echo "# Load MCP and project environment variables" >> ~/.bashrc
        echo "[ -f ~/.mcp_env_vars.sh ] && source ~/.mcp_env_vars.sh" >> ~/.bashrc
        echo "✅ Added to ~/.bashrc"
    else
        echo "✅ Already in ~/.bashrc"
    fi
fi

echo ""
echo "================================================"
echo "🎉 Setup Complete!"
echo ""
echo "The following environment variables are now permanently available:"
echo "  • DATABASE_URL (PostgreSQL/Supabase)"
echo "  • NOTION_API_KEY and all Notion database IDs"
echo "  • All Supabase configuration"
echo "  • All Clerk authentication settings"
echo "  • All Stripe configuration"
echo "  • Platform configuration"
echo ""
echo "To apply changes in current session, run:"
echo "  source ~/.zshrc"
echo ""
echo "Or simply open a new terminal window."

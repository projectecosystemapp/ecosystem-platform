stateDiagram-v2
    [*] --> Initialized: Create payment intent
    
    state Initialized {
        [*] --> CreatingIntent
        CreatingIntent --> IntentCreated: Stripe API call
        IntentCreated --> AttachingMetadata: Add booking details
        AttachingMetadata --> [*]: Ready for payment
    }
    
    state "Idempotency Check" as IdempCheck {
        CheckingKey: Verify idempotency key
        ExistingFound: Return existing intent
        NewRequired: Create new intent
    }
    
    Initialized --> IdempCheck: Before Stripe call
    IdempCheck --> Initialized: New payment
    IdempCheck --> Processing: Existing payment
    
    Initialized --> Processing: Customer submits payment
    Initialized --> Abandoned: Timeout (30 min)
    
    state Processing {
        [*] --> ValidatingCard
        ValidatingCard --> ThreeDSecure: Additional auth required
        ValidatingCard --> Authorizing: Card valid
        ThreeDSecure --> Authorizing: Auth complete
        ThreeDSecure --> Failed: Auth failed
        Authorizing --> [*]: Funds reserved
    }
    
    Processing --> Authorized: Payment method valid
    Processing --> Failed: Payment declined
    Processing --> RequiresAction: 3DS/Bank auth
    
    state RequiresAction {
        [*] --> CustomerAction
        CustomerAction --> ProcessingAuth: User completes
        ProcessingAuth --> [*]: Auth result
    }
    
    RequiresAction --> Authorized: Action completed
    RequiresAction --> Failed: Action failed/timeout
    
    state Authorized {
        [*] --> HoldingFunds
        HoldingFunds --> AwaitingCapture: Booking confirmed
        AwaitingCapture --> [*]: Ready to capture
    }
    
    state "Capture Guards" as CaptureGuards {
        BookingConfirmed: Provider accepted
        AutoConfirm: Instant booking enabled
        TimeElapsed: 24hr auto-capture
    }
    
    Authorized --> CaptureGuards: Check conditions
    CaptureGuards --> Captured: Conditions met
    Authorized --> Cancelled: Booking cancelled
    Authorized --> Expired: Auth expires (7 days)
    
    state Captured {
        [*] --> ProcessingCapture
        ProcessingCapture --> SettlingFunds: Stripe processing
        SettlingFunds --> CalculatingFees: Funds settled
        CalculatingFees --> SplittingPayment: Platform fee calculated
        SplittingPayment --> [*]: Ready for payout
    }
    
    state "Payout Schedule" as PayoutSchedule {
        Immediate: Service completed
        Delayed24Hr: Safety hold period
        Weekly: Batched payouts
        Manual: Provider request
    }
    
    Captured --> PayoutSchedule: Determine timing
    PayoutSchedule --> Settled: Process payout
    
    state Settled {
        [*] --> CreatingTransfer
        CreatingTransfer --> TransferPending: Stripe Connect transfer
        TransferPending --> TransferComplete: Funds moved
        TransferComplete --> [*]: Provider paid
    }
    
    state Failed {
        [*] --> AnalyzingFailure
        AnalyzingFailure --> InsufficientFunds: NSF
        AnalyzingFailure --> CardDeclined: Bank declined
        AnalyzingFailure --> FraudBlock: Risk system
        AnalyzingFailure --> NetworkError: Timeout
        InsufficientFunds --> RetryAvailable: Suggest retry
        CardDeclined --> AlternateMethod: Suggest different card
        FraudBlock --> ManualReview: Flag for review
        NetworkError --> AutoRetry: System retry
        RetryAvailable --> [*]
        AlternateMethod --> [*]
        ManualReview --> [*]
        AutoRetry --> Processing: Retry attempt
    }
    
    state Refunded {
        [*] --> InitiatingRefund
        InitiatingRefund --> CalculatingRefund: Check policy
        CalculatingRefund --> FullRefund: 100% refund
        CalculatingRefund --> PartialRefund: Partial refund
        CalculatingRefund --> NoRefund: Policy violation
        FullRefund --> ProcessingRefund
        PartialRefund --> ProcessingRefund
        NoRefund --> Settled: Keep payment
        ProcessingRefund --> RefundPending: Stripe API
        RefundPending --> RefundComplete: Bank processed
        RefundComplete --> [*]: Customer refunded
    }
    
    state "Refund Guards" as RefundGuards {
        Within24Hr: Full refund allowed
        Within48Hr: 50% refund
        After48Hr: No refund
        ProviderFault: Always full refund
        PlatformError: Full refund + credit
    }
    
    Settled --> RefundGuards: Refund request
    Captured --> RefundGuards: Pre-service refund
    RefundGuards --> Refunded: Process refund
    
    state Disputed {
        [*] --> DisputeReceived
        DisputeReceived --> GatheringEvidence: Webhook received
        GatheringEvidence --> SubmittingEvidence: Build case
        SubmittingEvidence --> UnderReview: Sent to Stripe
        UnderReview --> DisputeWon: Evidence accepted
        UnderReview --> DisputeLost: Customer wins
        DisputeWon --> Settled: Keep funds
        DisputeLost --> Chargeback: Funds reversed
        Chargeback --> [*]: Update records
    }
    
    Settled --> Disputed: Chargeback initiated
    Captured --> Disputed: Customer dispute
    
    state "Webhook Handlers" as Webhooks {
        payment_intent.succeeded
        payment_intent.payment_failed
        payment_intent.requires_action
        charge.succeeded
        charge.failed
        charge.refunded
        charge.dispute.created
        transfer.created
        transfer.failed
        payout.created
        payout.failed
    }
    
    note right of Webhooks
        All webhook events:
        1. Verify signature
        2. Check idempotency
        3. Update payment state
        4. Trigger side effects
        5. Return 200 quickly
    end note
    
    note right of Initialized
        Idempotency key format:
        booking-{bookingId}-{timestamp}
        Prevents double charges
    end note
    
    note right of Captured
        Platform fee calculation:
        - Standard: 15% + $0.30
        - Premium providers: 12%
        - Promotional: 10%
        - New providers first 10: 5%
    end note
    
    note right of Settled
        Payout timing:
        - Standard: T+2 days
        - Trusted: T+0 (immediate)
        - New providers: T+7 days
        - High risk: Manual review
    end note
    
    note left of Disputed
        Evidence required:
        - Service agreement
        - Communication logs
        - Completion proof
        - Provider credentials
        - Platform policies
    end note
    
    note left of Failed
        Retry strategy:
        - NSF: Retry in 3 days
        - Declined: Don't retry
        - Network: Exponential backoff
        - Max retries: 3
    end note
    
    Abandoned --> [*]
    Expired --> [*]
    Cancelled --> [*]